"""Initial tables

Revision ID: 359ab9800650
Revises: 
Create Date: 2025-10-07 05:05:51.667959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '359ab9800650'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'EDITOR', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key_prefix', sa.String(), nullable=False),
    sa.Column('key_hash', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'REVOKED', name='apikeystatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=False)
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collections_id'), 'collections', ['id'], unique=False)
    op.create_index(op.f('ix_collections_name'), 'collections', ['name'], unique=True)
    op.create_table('api_key_allowed',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('collection_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_key_allowed_id'), 'api_key_allowed', ['id'], unique=False)
    op.create_table('api_key_scopes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('scope', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_key_scopes_id'), 'api_key_scopes', ['id'], unique=False)
    op.create_table('fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('collection_type', sa.Enum('PERFORMANCE', 'CONFIGURATION', name='collectiontype'), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('value_type', sa.Enum('TEXT_FIXED', 'NUMBER_FIXED', 'FLOAT_FIXED', 'EPOCH_NOW', 'NUMBER_RANGE', 'FLOAT_RANGE', 'INCREMENT', 'DECREMENT', name='valuetype'), nullable=False),
    sa.Column('fixed_value_text', sa.String(), nullable=True),
    sa.Column('fixed_value_number', sa.Integer(), nullable=True),
    sa.Column('fixed_value_float', sa.Float(), nullable=True),
    sa.Column('range_start_number', sa.Integer(), nullable=True),
    sa.Column('range_end_number', sa.Integer(), nullable=True),
    sa.Column('range_start_float', sa.Float(), nullable=True),
    sa.Column('range_end_float', sa.Float(), nullable=True),
    sa.Column('float_precision', sa.Integer(), nullable=True),
    sa.Column('start_number', sa.Float(), nullable=True),
    sa.Column('step_number', sa.Float(), nullable=True),
    sa.Column('reset_number', sa.Float(), nullable=True),
    sa.Column('current_number', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection_id', 'collection_type', 'field_name', name='unique_field_per_collection_type')
    )
    op.create_index(op.f('ix_fields_id'), 'fields', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_fields_id'), table_name='fields')
    op.drop_table('fields')
    op.drop_index(op.f('ix_api_key_scopes_id'), table_name='api_key_scopes')
    op.drop_table('api_key_scopes')
    op.drop_index(op.f('ix_api_key_allowed_id'), table_name='api_key_allowed')
    op.drop_table('api_key_allowed')
    op.drop_index(op.f('ix_collections_name'), table_name='collections')
    op.drop_index(op.f('ix_collections_id'), table_name='collections')
    op.drop_table('collections')
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
