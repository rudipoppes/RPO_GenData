"""Add spike schedules tables

Revision ID: 5aac086484ba
Revises: 359ab9800650
Create Date: 2025-10-20 06:24:44.699550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5aac086484ba'
down_revision: Union[str, None] = '359ab9800650'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spike_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_spike_schedules_id'), 'spike_schedules', ['id'], unique=False)
    op.create_table('spike_schedule_fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spike_schedule_id', sa.Integer(), nullable=False),
    sa.Column('original_field_id', sa.Integer(), nullable=False),
    sa.Column('collection_type', sa.Enum('PERFORMANCE', 'CONFIGURATION', name='collectiontype'), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('value_type', sa.Enum('TEXT_FIXED', 'NUMBER_FIXED', 'FLOAT_FIXED', 'EPOCH_NOW', 'NUMBER_RANGE', 'FLOAT_RANGE', 'INCREMENT', 'DECREMENT', name='valuetype'), nullable=False),
    sa.Column('fixed_value_text', sa.String(), nullable=True),
    sa.Column('fixed_value_number', sa.Integer(), nullable=True),
    sa.Column('fixed_value_float', sa.Float(), nullable=True),
    sa.Column('range_start_number', sa.Integer(), nullable=True),
    sa.Column('range_end_number', sa.Integer(), nullable=True),
    sa.Column('range_start_float', sa.Float(), nullable=True),
    sa.Column('range_end_float', sa.Float(), nullable=True),
    sa.Column('float_precision', sa.Integer(), nullable=True),
    sa.Column('start_number', sa.Float(), nullable=True),
    sa.Column('step_number', sa.Float(), nullable=True),
    sa.Column('reset_number', sa.Float(), nullable=True),
    sa.Column('current_number', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['original_field_id'], ['fields.id'], ),
    sa.ForeignKeyConstraint(['spike_schedule_id'], ['spike_schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_spike_schedule_fields_id'), 'spike_schedule_fields', ['id'], unique=False)
    
    # Additional indexes for performance as specified in the plan
    op.create_index('idx_spike_schedules_collection', 'spike_schedules', ['collection_id'])
    op.create_index('idx_spike_schedules_datetime', 'spike_schedules', ['start_datetime', 'end_datetime'])
    op.create_index('idx_spike_schedule_fields_schedule', 'spike_schedule_fields', ['spike_schedule_id'])
    op.create_index('idx_spike_schedule_fields_original', 'spike_schedule_fields', ['original_field_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop additional indexes
    op.drop_index('idx_spike_schedule_fields_original', table_name='spike_schedule_fields')
    op.drop_index('idx_spike_schedule_fields_schedule', table_name='spike_schedule_fields')
    op.drop_index('idx_spike_schedules_datetime', table_name='spike_schedules')
    op.drop_index('idx_spike_schedules_collection', table_name='spike_schedules')
    
    op.drop_index(op.f('ix_spike_schedule_fields_id'), table_name='spike_schedule_fields')
    op.drop_table('spike_schedule_fields')
    op.drop_index(op.f('ix_spike_schedules_id'), table_name='spike_schedules')
    op.drop_table('spike_schedules')
    # ### end Alembic commands ###
